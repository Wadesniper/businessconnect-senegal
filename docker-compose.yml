version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb+srv://businessconnect:tlIQzehUEZnFPwoa@cluster0.gtehtk.mongodb.net/businessconnect?retryWrites=true&w=majority
      - JWT_SECRET=fc5c01210b133afeb2c293bfd28c59df3bb9d3b272999be0eb838c930b1419fd
      - JWT_EXPIRES_IN=7d
      - SMTP_HOST=smtp-relay.brevo.com
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_USER=88ccee002@smtp-brevo.com
      - SMTP_PASSWORD=myFchwr5H6AYtJdq
      - SMTP_FROM=88ccee002@smtp-brevo.com
      - PAYTECH_API_KEY=be2b2e9b3a0ed01d69d30dff8a21f05199e2e71968788b4890690d7af56ba32b
      - PAYTECH_WEBHOOK_SECRET=6860a504cc73992c2e8dc623c7b31d948ef5a4ec2507a0a4771e62755cca9277
      - PAYTECH_BASE_URL=https://paytech.sn
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=votre_mot_de_passe_complexe
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run start

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --requirepass votre_mot_de_passe_complexe
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "votre_mot_de_passe_complexe", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/build:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data: 