{"ast":null,"code":"import html2canvas from'html2canvas';import jsPDF from'jspdf';import{Document,Paragraph,TextRun,HeadingLevel,Packer,SectionType}from'docx';import{saveAs}from'file-saver';import{formatDate}from'../../../utils/dateUtils';const defaultOptions={format:'pdf',filename:'cv',paperFormat:'a4',orientation:'portrait',margin:10,quality:1,scale:2};const getWordStyles=customization=>({document:{run:{font:customization.fontFamily,size:parseInt(customization.fontSize)*2}},heading1:{run:{font:customization.fontFamily,size:36,color:customization.primaryColor}},heading2:{run:{font:customization.fontFamily,size:28,color:customization.primaryColor}}});export const exportToPDF=async function(element){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultOptions;let customization=arguments.length>2?arguments[2]:undefined;try{const canvas=await html2canvas(element,{scale:options.scale||2,useCORS:true,logging:false,backgroundColor:'#ffffff',windowWidth:element.scrollWidth,windowHeight:element.scrollHeight});const pdf=new jsPDF({format:options.paperFormat,orientation:options.orientation,unit:'mm',compress:true});const imgWidth=pdf.internal.pageSize.getWidth()-(options.margin||0)*2;const imgHeight=canvas.height*imgWidth/canvas.width;pdf.addImage(canvas.toDataURL('image/jpeg',options.quality||1.0),'JPEG',options.margin||0,options.margin||0,imgWidth,imgHeight,undefined,'FAST');pdf.save(`${options.filename}.pdf`);}catch(error){console.error('Erreur lors de l\\'export en PDF:',error);throw new Error('Impossible d\\'exporter le CV en PDF. Veuillez réessayer.');}};export const exportToWord=async(data,customization)=>{try{const doc=new Document({styles:getWordStyles(customization),sections:[{properties:{type:SectionType.CONTINUOUS},children:[new Paragraph({text:`${data.personalInfo.firstName} ${data.personalInfo.lastName}`,heading:HeadingLevel.HEADING_1}),new Paragraph({text:data.personalInfo.title,heading:HeadingLevel.HEADING_2}),new Paragraph({children:[new TextRun(`${data.personalInfo.email} | ${data.personalInfo.phone}`),...(data.personalInfo.address?[new TextRun(` | ${data.personalInfo.address}`)]:[])]}),new Paragraph({text:''}),...(data.summary?[new Paragraph({text:'Résumé professionnel',heading:HeadingLevel.HEADING_2}),new Paragraph({text:data.summary}),new Paragraph({text:''})]:[]),new Paragraph({text:'Expérience professionnelle',heading:HeadingLevel.HEADING_2}),...data.experience.flatMap(exp=>[new Paragraph({children:[new TextRun({text:exp.title,bold:true}),new TextRun(' - '),new TextRun({text:exp.company}),...(exp.location?[new TextRun(` - ${exp.location}`)]:[])]}),new Paragraph({text:`${formatDate(exp.startDate)} - ${exp.current?'Présent':formatDate(exp.endDate||'')}`}),...(exp.description?exp.description.map(desc=>new Paragraph({text:desc})):[]),...(exp.achievements?[new Paragraph({text:'Réalisations:',bold:true}),...exp.achievements.map(achievement=>new Paragraph({text:`• ${achievement}`,bullet:{level:0}}))]:[]),new Paragraph({text:''})]),new Paragraph({text:'Formation',heading:HeadingLevel.HEADING_2}),...data.education.flatMap(edu=>[new Paragraph({children:[new TextRun({text:edu.degree,bold:true}),...(edu.field?[new TextRun(` en ${edu.field}`)]:[])]}),new Paragraph({children:[new TextRun({text:edu.school}),...(edu.location?[new TextRun(` - ${edu.location}`)]:[])]}),new Paragraph({text:`${formatDate(edu.startDate)} - ${formatDate(edu.endDate)}`}),...(edu.description?[new Paragraph({text:edu.description})]:[]),...(edu.achievements?[new Paragraph({text:'Réalisations:',bold:true}),...edu.achievements.map(achievement=>new Paragraph({text:`• ${achievement}`,bullet:{level:0}}))]:[]),new Paragraph({text:''})]),new Paragraph({text:'Compétences',heading:HeadingLevel.HEADING_2}),...data.skills.map(skill=>new Paragraph({children:[new TextRun({text:skill.name,bold:true}),new TextRun(` - Niveau ${skill.level}`),...(skill.category?[new TextRun(` (${skill.category})`)]:[])]})),new Paragraph({text:''}),new Paragraph({text:'Langues',heading:HeadingLevel.HEADING_2}),...data.languages.map(lang=>new Paragraph({text:`${lang.name} - ${lang.level}`})),...(data.certifications&&data.certifications.length>0?[new Paragraph({text:'Certifications',heading:HeadingLevel.HEADING_2}),...data.certifications.map(cert=>new Paragraph({children:[new TextRun({text:cert.name,bold:true}),new TextRun(` - ${cert.issuer} (${formatDate(cert.date)})`)]}))]:[]),...(data.projects&&data.projects.length>0?[new Paragraph({text:'Projets',heading:HeadingLevel.HEADING_2}),...data.projects.flatMap(project=>[new Paragraph({text:project.title,heading:HeadingLevel.HEADING_3}),new Paragraph({text:project.description}),...(project.technologies?[new Paragraph({children:project.technologies.map(tech=>new TextRun({text:tech,color:customization.primaryColor}))})]:[]),new Paragraph({text:''})])]:[])]}]});const blob=await Packer.toBlob(doc);saveAs(blob,`CV_${data.personalInfo.firstName}_${data.personalInfo.lastName}.docx`);}catch(error){console.error('Erreur lors de l\\'export en Word:',error);throw new Error('Impossible d\\'exporter le CV en Word. Veuillez réessayer.');}};export const generateFileName=data=>{const{firstName,lastName}=data.personalInfo;const date=new Date().toISOString().split('T')[0];const sanitizedName=`${firstName}_${lastName}`.toLowerCase().replace(/[^a-z0-9]/g,'_').replace(/_+/g,'_');return`cv_${sanitizedName}_${date}`;};export const exportCV=async(data,template,customization,previewRef,format)=>{if(format==='pdf'){await exportToPDF(previewRef.current,defaultOptions,customization);}else{await exportToWord(data,customization);}};// Utilitaire pour diviser un tableau en groupes de taille n\nconst chunk=(arr,size)=>{return Array.from({length:Math.ceil(arr.length/size)},(_,i)=>arr.slice(i*size,i*size+size));};","map":{"version":3,"names":["html2canvas","jsPDF","Document","Paragraph","TextRun","HeadingLevel","Packer","SectionType","saveAs","formatDate","defaultOptions","format","filename","paperFormat","orientation","margin","quality","scale","getWordStyles","customization","document","run","font","fontFamily","size","parseInt","fontSize","heading1","color","primaryColor","heading2","exportToPDF","element","options","arguments","length","undefined","canvas","useCORS","logging","backgroundColor","windowWidth","scrollWidth","windowHeight","scrollHeight","pdf","unit","compress","imgWidth","internal","pageSize","getWidth","imgHeight","height","width","addImage","toDataURL","save","error","console","Error","exportToWord","data","doc","styles","sections","properties","type","CONTINUOUS","children","text","personalInfo","firstName","lastName","heading","HEADING_1","title","HEADING_2","email","phone","address","summary","experience","flatMap","exp","bold","company","location","startDate","current","endDate","description","map","desc","achievements","achievement","bullet","level","education","edu","degree","field","school","skills","skill","name","category","languages","lang","certifications","cert","issuer","date","projects","project","HEADING_3","technologies","tech","blob","toBlob","generateFileName","Date","toISOString","split","sanitizedName","toLowerCase","replace","exportCV","template","previewRef","chunk","arr","Array","from","Math","ceil","_","i","slice"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/pages/cv-generator/services/documentExport.ts"],"sourcesContent":["import html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport { Document, Paragraph, TextRun, HeadingLevel, Packer, SectionType, IStylesOptions, IDefaultStylesOptions, Table, TableRow, TableCell, WidthType, AlignmentType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\nimport { CVData, Template, CustomizationOptions } from '../types';\r\nimport { formatDate } from '../../../utils/dateUtils';\r\n\r\nexport type ExportFormat = 'pdf' | 'docx';\r\n\r\nexport interface ExportOptions {\r\n  format: ExportFormat;\r\n  filename?: string;\r\n  paperFormat?: 'a4' | 'letter';\r\n  orientation?: 'portrait' | 'landscape';\r\n  margin?: number;\r\n  quality?: number;\r\n  scale?: number;\r\n}\r\n\r\nconst defaultOptions: ExportOptions = {\r\n  format: 'pdf',\r\n  filename: 'cv',\r\n  paperFormat: 'a4',\r\n  orientation: 'portrait',\r\n  margin: 10,\r\n  quality: 1,\r\n  scale: 2\r\n};\r\n\r\nconst getWordStyles = (customization: CustomizationOptions): IDefaultStylesOptions => ({\r\n  document: {\r\n    run: {\r\n      font: customization.fontFamily,\r\n      size: parseInt(customization.fontSize) * 2\r\n    }\r\n  },\r\n  heading1: {\r\n    run: {\r\n      font: customization.fontFamily,\r\n      size: 36,\r\n      color: customization.primaryColor\r\n    }\r\n  },\r\n  heading2: {\r\n    run: {\r\n      font: customization.fontFamily,\r\n      size: 28,\r\n      color: customization.primaryColor\r\n    }\r\n  }\r\n});\r\n\r\nexport const exportToPDF = async (\r\n  element: HTMLElement,\r\n  options: ExportOptions = defaultOptions,\r\n  customization: CustomizationOptions\r\n): Promise<void> => {\r\n  try {\r\n    const canvas = await html2canvas(element, {\r\n      scale: options.scale || 2,\r\n      useCORS: true,\r\n      logging: false,\r\n      backgroundColor: '#ffffff',\r\n      windowWidth: element.scrollWidth,\r\n      windowHeight: element.scrollHeight\r\n    });\r\n\r\n    const pdf = new jsPDF({\r\n      format: options.paperFormat,\r\n      orientation: options.orientation,\r\n      unit: 'mm',\r\n      compress: true\r\n    });\r\n\r\n    const imgWidth = pdf.internal.pageSize.getWidth() - (options.margin || 0) * 2;\r\n    const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n\r\n    pdf.addImage(\r\n      canvas.toDataURL('image/jpeg', options.quality || 1.0),\r\n      'JPEG',\r\n      options.margin || 0,\r\n      options.margin || 0,\r\n      imgWidth,\r\n      imgHeight,\r\n      undefined,\r\n      'FAST'\r\n    );\r\n\r\n    pdf.save(`${options.filename}.pdf`);\r\n  } catch (error) {\r\n    console.error('Erreur lors de l\\'export en PDF:', error);\r\n    throw new Error('Impossible d\\'exporter le CV en PDF. Veuillez réessayer.');\r\n  }\r\n};\r\n\r\nexport const exportToWord = async (\r\n  data: CVData,\r\n  customization: CustomizationOptions\r\n): Promise<void> => {\r\n  try {\r\n    const doc = new Document({\r\n      styles: getWordStyles(customization),\r\n      sections: [{\r\n        properties: {\r\n          type: SectionType.CONTINUOUS\r\n        },\r\n        children: [\r\n          new Paragraph({\r\n            text: `${data.personalInfo.firstName} ${data.personalInfo.lastName}`,\r\n            heading: HeadingLevel.HEADING_1,\r\n          }),\r\n          new Paragraph({\r\n            text: data.personalInfo.title,\r\n            heading: HeadingLevel.HEADING_2,\r\n          }),\r\n          new Paragraph({\r\n            children: [\r\n              new TextRun(`${data.personalInfo.email} | ${data.personalInfo.phone}`),\r\n              ...(data.personalInfo.address ? [new TextRun(` | ${data.personalInfo.address}`)] : []),\r\n            ],\r\n          }),\r\n          new Paragraph({ text: '' }),\r\n\r\n          ...(data.summary ? [\r\n            new Paragraph({\r\n              text: 'Résumé professionnel',\r\n              heading: HeadingLevel.HEADING_2,\r\n            }),\r\n            new Paragraph({ text: data.summary }),\r\n            new Paragraph({ text: '' }),\r\n          ] : []),\r\n\r\n          new Paragraph({\r\n            text: 'Expérience professionnelle',\r\n            heading: HeadingLevel.HEADING_2,\r\n          }),\r\n          ...data.experience.flatMap(exp => [\r\n            new Paragraph({\r\n              children: [\r\n                new TextRun({ text: exp.title, bold: true }),\r\n                new TextRun(' - '),\r\n                new TextRun({ text: exp.company }),\r\n                ...(exp.location ? [new TextRun(` - ${exp.location}`)] : []),\r\n              ],\r\n            }),\r\n            new Paragraph({\r\n              text: `${formatDate(exp.startDate)} - ${exp.current ? 'Présent' : formatDate(exp.endDate || '')}`,\r\n            }),\r\n            ...(exp.description ? exp.description.map(desc => new Paragraph({ text: desc })) : []),\r\n            ...(exp.achievements ? [\r\n              new Paragraph({ text: 'Réalisations:', bold: true }),\r\n              ...exp.achievements.map(achievement => \r\n                new Paragraph({ \r\n                  text: `• ${achievement}`,\r\n                  bullet: { level: 0 }\r\n                })\r\n              )\r\n            ] : []),\r\n            new Paragraph({ text: '' }),\r\n          ]),\r\n\r\n          new Paragraph({\r\n            text: 'Formation',\r\n            heading: HeadingLevel.HEADING_2,\r\n          }),\r\n          ...data.education.flatMap(edu => [\r\n            new Paragraph({\r\n              children: [\r\n                new TextRun({ text: edu.degree, bold: true }),\r\n                ...(edu.field ? [new TextRun(` en ${edu.field}`)] : []),\r\n              ],\r\n            }),\r\n            new Paragraph({ \r\n              children: [\r\n                new TextRun({ text: edu.school }),\r\n                ...(edu.location ? [new TextRun(` - ${edu.location}`)] : []),\r\n              ]\r\n            }),\r\n            new Paragraph({\r\n              text: `${formatDate(edu.startDate)} - ${formatDate(edu.endDate)}`,\r\n            }),\r\n            ...(edu.description ? [new Paragraph({ text: edu.description })] : []),\r\n            ...(edu.achievements ? [\r\n              new Paragraph({ text: 'Réalisations:', bold: true }),\r\n              ...edu.achievements.map(achievement => \r\n                new Paragraph({ \r\n                  text: `• ${achievement}`,\r\n                  bullet: { level: 0 }\r\n                })\r\n              )\r\n            ] : []),\r\n            new Paragraph({ text: '' }),\r\n          ]),\r\n\r\n          new Paragraph({\r\n            text: 'Compétences',\r\n            heading: HeadingLevel.HEADING_2,\r\n          }),\r\n          ...data.skills.map(skill => \r\n            new Paragraph({\r\n              children: [\r\n                new TextRun({ text: skill.name, bold: true }),\r\n                new TextRun(` - Niveau ${skill.level}`),\r\n                ...(skill.category ? [new TextRun(` (${skill.category})`)] : []),\r\n              ],\r\n            })\r\n          ),\r\n          new Paragraph({ text: '' }),\r\n\r\n          new Paragraph({\r\n            text: 'Langues',\r\n            heading: HeadingLevel.HEADING_2,\r\n          }),\r\n          ...data.languages.map(lang => \r\n            new Paragraph({\r\n              text: `${lang.name} - ${lang.level}`,\r\n            })\r\n          ),\r\n\r\n          ...(data.certifications && data.certifications.length > 0 ? [\r\n            new Paragraph({\r\n              text: 'Certifications',\r\n              heading: HeadingLevel.HEADING_2,\r\n            }),\r\n            ...data.certifications.map(cert => \r\n              new Paragraph({\r\n                children: [\r\n                  new TextRun({ text: cert.name, bold: true }),\r\n                  new TextRun(` - ${cert.issuer} (${formatDate(cert.date)})`),\r\n                ],\r\n              })\r\n            ),\r\n          ] : []),\r\n\r\n          ...(data.projects && data.projects.length > 0 ? [\r\n            new Paragraph({\r\n              text: 'Projets',\r\n              heading: HeadingLevel.HEADING_2,\r\n            }),\r\n            ...data.projects.flatMap(project => [\r\n              new Paragraph({\r\n                text: project.title,\r\n                heading: HeadingLevel.HEADING_3,\r\n              }),\r\n              new Paragraph({ text: project.description }),\r\n              ...(project.technologies ? [\r\n                new Paragraph({\r\n                  children: project.technologies.map(tech => \r\n                    new TextRun({ text: tech, color: customization.primaryColor })\r\n                  ),\r\n                })\r\n              ] : []),\r\n              new Paragraph({ text: '' }),\r\n            ]),\r\n          ] : []),\r\n        ],\r\n      }],\r\n    });\r\n\r\n    const blob = await Packer.toBlob(doc);\r\n    saveAs(blob, `CV_${data.personalInfo.firstName}_${data.personalInfo.lastName}.docx`);\r\n  } catch (error) {\r\n    console.error('Erreur lors de l\\'export en Word:', error);\r\n    throw new Error('Impossible d\\'exporter le CV en Word. Veuillez réessayer.');\r\n  }\r\n};\r\n\r\nexport const generateFileName = (data: CVData): string => {\r\n  const { firstName, lastName } = data.personalInfo;\r\n  const date = new Date().toISOString().split('T')[0];\r\n  const sanitizedName = `${firstName}_${lastName}`.toLowerCase()\r\n    .replace(/[^a-z0-9]/g, '_')\r\n    .replace(/_+/g, '_');\r\n  return `cv_${sanitizedName}_${date}`;\r\n};\r\n\r\nexport const exportCV = async (\r\n  data: CVData,\r\n  template: Template,\r\n  customization: CustomizationOptions,\r\n  previewRef: React.RefObject<HTMLDivElement>,\r\n  format: ExportFormat\r\n): Promise<void> => {\r\n  if (format === 'pdf') {\r\n    await exportToPDF(previewRef.current, defaultOptions, customization);\r\n  } else {\r\n    await exportToWord(data, customization);\r\n  }\r\n};\r\n\r\n// Utilitaire pour diviser un tableau en groupes de taille n\r\nconst chunk = <T>(arr: T[], size: number): T[][] => {\r\n  return Array.from({ length: Math.ceil(arr.length / size) }, (_, i) =>\r\n    arr.slice(i * size, i * size + size)\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}