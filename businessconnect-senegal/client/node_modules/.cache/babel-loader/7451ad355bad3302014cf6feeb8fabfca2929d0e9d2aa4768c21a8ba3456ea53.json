{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { clamp, head, last } from '@antv/util';\nimport RectMask from './rect';\nfunction clampPoint(point) {\n  point.x = clamp(point.x, 0, 1);\n  point.y = clamp(point.y, 0, 1);\n}\nexport function getRegion(points, dim, inPlot, coord) {\n  var start = null;\n  var end = null;\n  var normalStart = coord.invert(head(points));\n  var normalEnd = coord.invert(last(points));\n  if (inPlot) {\n    // 约束到 0 - 1 范围内\n    clampPoint(normalStart);\n    clampPoint(normalEnd);\n  }\n  if (dim === 'x') {\n    // x 轴方向扩展, y 轴方向占满全部\n    start = coord.convert({\n      x: normalStart.x,\n      y: 0\n    });\n    end = coord.convert({\n      x: normalEnd.x,\n      y: 1\n    });\n  } else {\n    // y 轴方向扩展, x 轴方向占满全部\n    start = coord.convert({\n      x: 0,\n      y: normalStart.y\n    });\n    end = coord.convert({\n      x: 1,\n      y: normalEnd.y\n    });\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\n/**\n * @ignore\n */\nvar DimRect = /** @class */function (_super) {\n  __extends(DimRect, _super);\n  function DimRect() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.dim = 'x';\n    _this.inPlot = true;\n    return _this;\n  }\n  DimRect.prototype.getRegion = function () {\n    var coord = this.context.view.getCoordinate();\n    return getRegion(this.points, this.dim, this.inPlot, coord);\n  };\n  return DimRect;\n}(RectMask);\nexport default DimRect;\n//# sourceMappingURL=dim-rect.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}