{"ast":null,"code":"import axios from'axios';import{discussionsData}from'../data/forumData';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';export const api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Intercepteur pour gérer les erreurs\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/auth/login';}return Promise.reject(error);});// Mock des appels API pour le forum en attendant l'implémentation backend\nconst forumApi={getDiscussions:()=>{return Promise.resolve({data:discussionsData});},getDiscussion:id=>{const discussion=discussionsData.find(d=>d.id===id);if(discussion){return Promise.resolve({data:discussion});}return Promise.reject(new Error('Discussion non trouvée'));},createDiscussion:data=>{const newDiscussion={id:String(discussionsData.length+1),...data,createdAt:new Date().toISOString(),repliesCount:0,likesCount:0,replies:[]};discussionsData.unshift(newDiscussion);return Promise.resolve({data:newDiscussion});},addReply:(discussionId,data)=>{const discussion=discussionsData.find(d=>d.id===discussionId);if(discussion){const newReply={id:`${discussionId}-${discussion.replies.length+1}`,...data,createdAt:new Date().toISOString(),likesCount:0};discussion.replies.push(newReply);discussion.repliesCount+=1;return Promise.resolve({data:newReply});}return Promise.reject(new Error('Discussion non trouvée'));},likeDiscussion:discussionId=>{const discussion=discussionsData.find(d=>d.id===discussionId);if(discussion){discussion.likesCount+=1;return Promise.resolve({data:{likesCount:discussion.likesCount}});}return Promise.reject(new Error('Discussion non trouvée'));}};// Configuration des intercepteurs pour le mock du forum\napi.interceptors.request.use(config=>{var _config$url;if((_config$url=config.url)!==null&&_config$url!==void 0&&_config$url.startsWith('/forum')){const mockResponse=async()=>{var _config$method;const method=(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toLowerCase();const url=config.url;if(!url){throw new Error('URL non définie');}if(method==='get'){if(url==='/forum/discussions'){const{data}=await forumApi.getDiscussions();return{data,status:200,statusText:'OK',headers:{},config};}else if(url.match(/\\/forum\\/discussions\\/\\w+$/)){const id=url.split('/').pop()||'';const{data}=await forumApi.getDiscussion(id);return{data,status:200,statusText:'OK',headers:{},config};}}else if(method==='post'){if(url==='/forum/discussions'){const{data}=await forumApi.createDiscussion(config.data);return{data,status:201,statusText:'Created',headers:{},config};}else if(url.match(/\\/forum\\/discussions\\/\\w+\\/replies$/)){const id=url.split('/')[3];const{data}=await forumApi.addReply(id,config.data);return{data,status:201,statusText:'Created',headers:{},config};}else if(url.match(/\\/forum\\/discussions\\/\\w+\\/like$/)){const id=url.split('/')[3];const{data}=await forumApi.likeDiscussion(id);return{data,status:200,statusText:'OK',headers:{},config};}}throw new Error('Route non trouvée');};return{...config,adapter:mockResponse};}return config;});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}