{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';export const authService={getToken:()=>{return localStorage.getItem('token');},setToken:token=>{localStorage.setItem('token',token);},getCurrentUser:()=>{const userStr=localStorage.getItem('user');if(!userStr)return null;const user=JSON.parse(userStr);return{id:user.id,fullName:user.fullName||user.name||'Utilisateur',email:user.email,phoneNumber:user.phoneNumber||'',role:user.role||'user',subscription:user.subscription};},setCurrentUser:user=>{localStorage.setItem('user',JSON.stringify(user));},isAuthenticated:()=>{return!!localStorage.getItem('token');},isAdmin:()=>{const user=authService.getCurrentUser();return(user===null||user===void 0?void 0:user.role)==='admin';},login:async(identifier,password)=>{const response=await axios.post(`${API_URL}/auth/login`,{identifier,password});const{token,user}=response.data;authService.setToken(token);authService.setCurrentUser(user);return user;},register:async userData=>{const response=await axios.post(`${API_URL}/auth/register`,userData);const{token,user}=response.data;authService.setToken(token);authService.setCurrentUser(user);return user;},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('user');},verifyToken:async()=>{try{const token=authService.getToken();if(!token)return false;const response=await axios.get(`${API_URL}/auth/verify`,{headers:{Authorization:`Bearer ${token}`}});return response.data.valid;}catch{return false;}}};export default authService;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}