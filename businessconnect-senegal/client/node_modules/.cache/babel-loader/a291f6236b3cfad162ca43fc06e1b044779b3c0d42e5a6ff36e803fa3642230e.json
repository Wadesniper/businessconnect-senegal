{"ast":null,"code":"import{api}from'./api';export const marketplaceService={async getItems(filters){try{const response=await api.get('/marketplace',{params:filters});return response.data;}catch(error){console.error('Erreur lors de la récupération des annonces:',error);throw error;}},async getItem(id){try{const response=await api.get(`/marketplace/${id}`);return response.data;}catch(error){console.error('Erreur lors de la récupération de l\\'annonce:',error);return null;}},async createItem(itemData){try{const response=await api.post('/marketplace',itemData);return response.data;}catch(error){console.error('Erreur lors de la création de l\\'annonce:',error);throw error;}},async updateItem(id,itemData){try{const response=await api.put(`/marketplace/${id}`,itemData);return response.data;}catch(error){console.error('Erreur lors de la mise à jour de l\\'annonce:',error);throw error;}},async deleteItem(id){try{await api.delete(`/marketplace/${id}`);}catch(error){console.error('Erreur lors de la suppression de l\\'annonce:',error);throw error;}},async uploadImage(file){try{const formData=new FormData();formData.append('image',file);const response=await api.post('/marketplace/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.url;}catch(error){console.error('Erreur lors du téléchargement de l\\'image:',error);throw error;}}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}