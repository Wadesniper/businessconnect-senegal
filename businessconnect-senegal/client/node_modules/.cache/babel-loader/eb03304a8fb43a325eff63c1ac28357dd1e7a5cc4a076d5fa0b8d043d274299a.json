{"ast":null,"code":"import axios from'axios';import{authService}from'./authService';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001/api';const getAuthHeaders=()=>({headers:{Authorization:`Bearer ${authService.getToken()}`}});export const adminService={// Statistiques\ngetStatistics:async function(dateRange){let viewType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'week';const params=new URLSearchParams();if(dateRange){params.append('start',dateRange.start.toISOString());params.append('end',dateRange.end.toISOString());}params.append('viewType',viewType);const response=await axios.get(`${API_URL}/admin/statistics?${params.toString()}`,getAuthHeaders());return response.data;},// Gestion des utilisateurs\ngetUsers:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams({page:String(page),limit:String(limit),...filters});const response=await axios.get(`${API_URL}/admin/users?${params.toString()}`,getAuthHeaders());return response.data;},updateUserStatus:async(userId,status)=>{const response=await axios.patch(`${API_URL}/admin/users/${userId}/status`,{status},getAuthHeaders());return response.data;},deleteUser:async userId=>{await axios.delete(`${API_URL}/admin/users/${userId}`,getAuthHeaders());},// Gestion des abonnements\ngetSubscriptions:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams({page:String(page),limit:String(limit),...filters});const response=await axios.get(`${API_URL}/admin/subscriptions?${params.toString()}`,getAuthHeaders());return response.data;},updateSubscription:async(subscriptionId,data)=>{const response=await axios.patch(`${API_URL}/admin/subscriptions/${subscriptionId}`,data,getAuthHeaders());return response.data;},// Gestion des offres d'emploi\ngetJobs:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams({page:String(page),limit:String(limit),...filters});const response=await axios.get(`${API_URL}/admin/jobs?${params.toString()}`,getAuthHeaders());return response.data;},createJob:async jobData=>{const response=await axios.post(`${API_URL}/admin/jobs`,jobData,getAuthHeaders());return response.data;},updateJob:async(jobId,data)=>{const response=await axios.patch(`${API_URL}/admin/jobs/${jobId}`,data,getAuthHeaders());return response.data;},deleteJob:async jobId=>{await axios.delete(`${API_URL}/admin/jobs/${jobId}`,getAuthHeaders());},// Import d'offres d'emploi par lot\nimportJobsFromFile:async file=>{const formData=new FormData();formData.append('file',file);const response=await axios.post(`${API_URL}/admin/jobs/import`,formData,{...getAuthHeaders(),headers:{...getAuthHeaders().headers,'Content-Type':'multipart/form-data'}});return response.data;},// Modération du forum\ngetForumPosts:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams({page:String(page),limit:String(limit),...filters});const response=await axios.get(`${API_URL}/admin/forum/posts?${params.toString()}`,getAuthHeaders());return response.data;},moderatePost:async(postId,action,reason)=>{const response=await axios.post(`${API_URL}/admin/forum/posts/${postId}/moderate`,{action,reason},getAuthHeaders());return response.data;},// Modération du marketplace\ngetMarketplaceItems:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const params=new URLSearchParams({page:String(page),limit:String(limit),...filters});const response=await axios.get(`${API_URL}/admin/marketplace/items?${params.toString()}`,getAuthHeaders());return response.data;},moderateItem:async(itemId,action,reason)=>{const response=await axios.post(`${API_URL}/admin/marketplace/items/${itemId}/moderate`,{action,reason},getAuthHeaders());return response.data;}};export default adminService;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}