{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport MaskBase from './base';\n/**\n * 生成 mask 的路径\n * @param points\n * @returns\n */\nexport function getMaskPath(points) {\n  var path = [];\n  if (points.length) {\n    each(points, function (point, index) {\n      if (index === 0) {\n        path.push(['M', point.x, point.y]);\n      } else {\n        path.push(['L', point.x, point.y]);\n      }\n    });\n    path.push(['L', points[0].x, points[0].y]);\n  }\n  return path;\n}\nexport function getMaskAttrs(points) {\n  return {\n    path: getMaskPath(points)\n  };\n}\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nvar PathMask = /** @class */function (_super) {\n  __extends(PathMask, _super);\n  function PathMask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PathMask.prototype.getMaskPath = function () {\n    return getMaskPath(this.points);\n  };\n  PathMask.prototype.getMaskAttrs = function () {\n    return getMaskAttrs(this.points);\n  };\n  /**\n   * 添加一个点\n   */\n  PathMask.prototype.addPoint = function () {\n    this.resize();\n  };\n  return PathMask;\n}(MaskBase);\nexport default PathMask;\n//# sourceMappingURL=path.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}