{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultCustomization={primaryColor:'#1a237e',secondaryColor:'#f50057',fontFamily:'Roboto, Arial, sans-serif',fontSize:'16px',spacing:'comfortable'};const CVContext=/*#__PURE__*/createContext(undefined);export const CVProvider=_ref=>{let{children}=_ref;const[cvData,setCVData]=useState(null);const[selectedTemplate,setSelectedTemplate]=useState(null);const[customization,setCustomization]=useState(defaultCustomization);const[currentStep,setCurrentStep]=useState(0);// Validation simple : toutes les sections obligatoires doivent être remplies\nconst isValid=Boolean(cvData&&cvData.personalInfo&&cvData.personalInfo.firstName&&cvData.personalInfo.lastName&&cvData.personalInfo.title&&cvData.experience&&cvData.experience.length>0&&cvData.education&&cvData.education.length>0);return/*#__PURE__*/_jsx(CVContext.Provider,{value:{cvData,setCVData,selectedTemplate,setSelectedTemplate,customization,setCustomization,currentStep,setCurrentStep,isValid},children:children});};export const useCV=()=>{const context=useContext(CVContext);if(!context){throw new Error('useCV must be used within a CVProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","defaultCustomization","primaryColor","secondaryColor","fontFamily","fontSize","spacing","CVContext","undefined","CVProvider","_ref","children","cvData","setCVData","selectedTemplate","setSelectedTemplate","customization","setCustomization","currentStep","setCurrentStep","isValid","Boolean","personalInfo","firstName","lastName","title","experience","length","education","Provider","value","useCV","context","Error"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/pages/cv-generator/context/CVContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { CVData, CustomizationOptions, Template } from '../../../types/cv';\r\n\r\ninterface CVContextType {\r\n  cvData: CVData | null;\r\n  setCVData: (data: CVData) => void;\r\n  selectedTemplate: Template | null;\r\n  setSelectedTemplate: (template: Template | null) => void;\r\n  customization: CustomizationOptions;\r\n  setCustomization: (options: CustomizationOptions) => void;\r\n  currentStep: number;\r\n  setCurrentStep: (step: number) => void;\r\n  isValid: boolean;\r\n}\r\n\r\nconst defaultCustomization: CustomizationOptions = {\r\n  primaryColor: '#1a237e',\r\n  secondaryColor: '#f50057',\r\n  fontFamily: 'Roboto, Arial, sans-serif',\r\n  fontSize: '16px',\r\n  spacing: 'comfortable',\r\n};\r\n\r\nconst CVContext = createContext<CVContextType | undefined>(undefined);\r\n\r\nexport const CVProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cvData, setCVData] = useState<CVData | null>(null);\r\n  const [selectedTemplate, setSelectedTemplate] = useState<Template | null>(null);\r\n  const [customization, setCustomization] = useState<CustomizationOptions>(defaultCustomization);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  // Validation simple : toutes les sections obligatoires doivent être remplies\r\n  const isValid = Boolean(\r\n    cvData &&\r\n    cvData.personalInfo &&\r\n    cvData.personalInfo.firstName &&\r\n    cvData.personalInfo.lastName &&\r\n    cvData.personalInfo.title &&\r\n    cvData.experience && cvData.experience.length > 0 &&\r\n    cvData.education && cvData.education.length > 0\r\n  );\r\n\r\n  return (\r\n    <CVContext.Provider\r\n      value={{\r\n        cvData,\r\n        setCVData,\r\n        selectedTemplate,\r\n        setSelectedTemplate,\r\n        customization,\r\n        setCustomization,\r\n        currentStep,\r\n        setCurrentStep,\r\n        isValid,\r\n      }}\r\n    >\r\n      {children}\r\n    </CVContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCV = () => {\r\n  const context = useContext(CVContext);\r\n  if (!context) {\r\n    throw new Error('useCV must be used within a CVProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAmB,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAe9E,KAAM,CAAAC,oBAA0C,CAAG,CACjDC,YAAY,CAAE,SAAS,CACvBC,cAAc,CAAE,SAAS,CACzBC,UAAU,CAAE,2BAA2B,CACvCC,QAAQ,CAAE,MAAM,CAChBC,OAAO,CAAE,aACX,CAAC,CAED,KAAM,CAAAC,SAAS,cAAGX,aAAa,CAA4BY,SAAS,CAAC,CAErE,MAAO,MAAM,CAAAC,UAAU,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CAC9D,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAgB,IAAI,CAAC,CACzD,KAAM,CAACgB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjB,QAAQ,CAAkB,IAAI,CAAC,CAC/E,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAuBG,oBAAoB,CAAC,CAC9F,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAEjD;AACA,KAAM,CAAAsB,OAAO,CAAGC,OAAO,CACrBT,MAAM,EACNA,MAAM,CAACU,YAAY,EACnBV,MAAM,CAACU,YAAY,CAACC,SAAS,EAC7BX,MAAM,CAACU,YAAY,CAACE,QAAQ,EAC5BZ,MAAM,CAACU,YAAY,CAACG,KAAK,EACzBb,MAAM,CAACc,UAAU,EAAId,MAAM,CAACc,UAAU,CAACC,MAAM,CAAG,CAAC,EACjDf,MAAM,CAACgB,SAAS,EAAIhB,MAAM,CAACgB,SAAS,CAACD,MAAM,CAAG,CAChD,CAAC,CAED,mBACE3B,IAAA,CAACO,SAAS,CAACsB,QAAQ,EACjBC,KAAK,CAAE,CACLlB,MAAM,CACNC,SAAS,CACTC,gBAAgB,CAChBC,mBAAmB,CACnBC,aAAa,CACbC,gBAAgB,CAChBC,WAAW,CACXC,cAAc,CACdC,OACF,CAAE,CAAAT,QAAA,CAEDA,QAAQ,CACS,CAAC,CAEzB,CAAC,CAED,MAAO,MAAM,CAAAoB,KAAK,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,OAAO,CAAGnC,UAAU,CAACU,SAAS,CAAC,CACrC,GAAI,CAACyB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,wCAAwC,CAAC,CAC3D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}