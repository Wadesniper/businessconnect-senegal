{"ast":null,"code":"import{api}from'./api';import{message}from'antd';import{subscriptionData}from'../data/subscriptionData';const TOKEN_KEY='auth_token';export const authService={async login(credentials){try{const response=await api.post('/auth/login',credentials);if(response.data.success){localStorage.setItem('token',response.data.data.token);localStorage.setItem('user',JSON.stringify(response.data.data.user));}return response.data.data;}catch(error){var _error$response,_error$response$data;const errorMessage=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Erreur lors de la connexion';message.error(errorMessage);throw error;}},async register(data){try{const response=await api.post('/auth/register',data);if(response.data.success){localStorage.setItem('token',response.data.data.token);localStorage.setItem('user',JSON.stringify(response.data.data.user));}return response.data;}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Erreur lors de l\\'inscription';message.error(errorMessage);throw error;}},logout(){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/auth/login';},async getCurrentUser(){const response=await api.get('/auth/me');return response.data;},async updateProfile(data){const response=await api.patch('/auth/profile',data);return response.data;},async resetPassword(phoneNumber){await api.post('/auth/reset-password',{phoneNumber});},async verifyResetToken(token){await api.post('/auth/verify-reset-token',{token});},async setNewPassword(token,password){await api.post('/auth/set-new-password',{token,password});},async verifyPhoneNumber(token){await api.post('/auth/verify-phone',{token});},async updateSubscription(status){const response=await api.patch('/auth/subscription',{status});return response.data;},async updateCompanyInfo(companyData){const response=await api.patch('/auth/company',companyData);return response.data;},async updateProfileInfo(profileData){const response=await api.patch('/auth/profile-details',profileData);return response.data;},setToken(token){localStorage.setItem(TOKEN_KEY,token);},getToken(){return localStorage.getItem(TOKEN_KEY);},removeToken(){localStorage.removeItem(TOKEN_KEY);},isAuthenticated(){return!!this.getToken();},getUserRole(){const user=this.getCurrentUser();return user?user.role:null;},isAdmin(){return this.getUserRole()==='admin';},isEtudiant(){return this.getUserRole()==='etudiant';},isAnnonceur(){return this.getUserRole()==='annonceur';},isEmployeur(){return this.getUserRole()==='employeur';},getCurrentUserSubscription(){const user=this.getCurrentUser();if(!user)return undefined;return subscriptionData.find(sub=>sub.userId===user.id);},setCurrentUserSubscriptionActive(active){const user=this.getCurrentUser();if(!user)return;const sub=subscriptionData.find(sub=>sub.userId===user.id);if(sub){sub.isActive=active;if(active){sub.expiresAt=new Date(Date.now()+1000*60*60*24*30).toISOString();}else{sub.expiresAt=new Date(Date.now()-1000*60*60*24).toISOString();}}},renewCurrentUserSubscription(){this.setCurrentUserSubscriptionActive(true);},expireCurrentUserSubscription(){this.setCurrentUserSubscriptionActive(false);}};","map":{"version":3,"names":["api","message","subscriptionData","TOKEN_KEY","authService","login","credentials","response","post","data","success","localStorage","setItem","token","JSON","stringify","user","error","_error$response","_error$response$data","errorMessage","register","_error$response2","_error$response2$data","logout","removeItem","window","location","href","getCurrentUser","get","updateProfile","patch","resetPassword","phoneNumber","verifyResetToken","setNewPassword","password","verifyPhoneNumber","updateSubscription","status","updateCompanyInfo","companyData","updateProfileInfo","profileData","setToken","getToken","getItem","removeToken","isAuthenticated","getUserRole","role","isAdmin","isEtudiant","isAnnonceur","isEmployeur","getCurrentUserSubscription","undefined","find","sub","userId","id","setCurrentUserSubscriptionActive","active","isActive","expiresAt","Date","now","toISOString","renewCurrentUserSubscription","expireCurrentUserSubscription"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/services/authService.ts"],"sourcesContent":["import { api } from './api';\nimport { message } from 'antd';\nimport { subscriptionData, UserSubscription } from '../data/subscriptionData';\nimport { User, UserRole, UserRegistrationData, LoginCredentials } from '../types/user';\n\nexport interface AuthResponse {\n  success: boolean;\n  message: string;\n  data: {\n    token: string;\n    user: User;\n  };\n}\n\nconst TOKEN_KEY = 'auth_token';\n\nexport const authService = {\n  async login(credentials: LoginCredentials): Promise<AuthResponse['data']> {\n    try {\n      const response = await api.post<AuthResponse>('/auth/login', credentials);\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      }\n      return response.data.data;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Erreur lors de la connexion';\n      message.error(errorMessage);\n      throw error;\n    }\n  },\n\n  async register(data: UserRegistrationData): Promise<AuthResponse> {\n    try {\n      const response = await api.post<AuthResponse>('/auth/register', data);\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      }\n      return response.data;\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Erreur lors de l\\'inscription';\n      message.error(errorMessage);\n      throw error;\n    }\n  },\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/auth/login';\n  },\n\n  async getCurrentUser(): Promise<User> {\n    const response = await api.get<User>('/auth/me');\n    return response.data;\n  },\n\n  async updateProfile(data: Partial<User>): Promise<User> {\n    const response = await api.patch<User>('/auth/profile', data);\n    return response.data;\n  },\n\n  async resetPassword(phoneNumber: string): Promise<void> {\n    await api.post('/auth/reset-password', { phoneNumber });\n  },\n\n  async verifyResetToken(token: string): Promise<void> {\n    await api.post('/auth/verify-reset-token', { token });\n  },\n\n  async setNewPassword(token: string, password: string): Promise<void> {\n    await api.post('/auth/set-new-password', { token, password });\n  },\n\n  async verifyPhoneNumber(token: string): Promise<void> {\n    await api.post('/auth/verify-phone', { token });\n  },\n\n  async updateSubscription(status: 'active' | 'cancelled'): Promise<User> {\n    const response = await api.patch<User>('/auth/subscription', { status });\n    return response.data;\n  },\n\n  async updateCompanyInfo(companyData: Partial<User['company']>): Promise<User> {\n    const response = await api.patch<User>('/auth/company', companyData);\n    return response.data;\n  },\n\n  async updateProfileInfo(profileData: Partial<User['profile']>): Promise<User> {\n    const response = await api.patch<User>('/auth/profile-details', profileData);\n    return response.data;\n  },\n\n  setToken(token: string): void {\n    localStorage.setItem(TOKEN_KEY, token);\n  },\n\n  getToken(): string | null {\n    return localStorage.getItem(TOKEN_KEY);\n  },\n\n  removeToken(): void {\n    localStorage.removeItem(TOKEN_KEY);\n  },\n\n  isAuthenticated(): boolean {\n    return !!this.getToken();\n  },\n\n  getUserRole(): UserRole | null {\n    const user = this.getCurrentUser();\n    return user ? user.role : null;\n  },\n\n  isAdmin(): boolean {\n    return this.getUserRole() === 'admin';\n  },\n\n  isEtudiant(): boolean {\n    return this.getUserRole() === 'etudiant';\n  },\n\n  isAnnonceur(): boolean {\n    return this.getUserRole() === 'annonceur';\n  },\n\n  isEmployeur(): boolean {\n    return this.getUserRole() === 'employeur';\n  },\n\n  getCurrentUserSubscription(): UserSubscription | undefined {\n    const user = this.getCurrentUser();\n    if (!user) return undefined;\n    return subscriptionData.find(sub => sub.userId === user.id);\n  },\n\n  setCurrentUserSubscriptionActive(active: boolean) {\n    const user = this.getCurrentUser();\n    if (!user) return;\n    const sub = subscriptionData.find(sub => sub.userId === user.id);\n    if (sub) {\n      sub.isActive = active;\n      if (active) {\n        sub.expiresAt = new Date(Date.now() + 1000 * 60 * 60 * 24 * 30).toISOString();\n      } else {\n        sub.expiresAt = new Date(Date.now() - 1000 * 60 * 60 * 24).toISOString();\n      }\n    }\n  },\n\n  renewCurrentUserSubscription() {\n    this.setCurrentUserSubscriptionActive(true);\n  },\n\n  expireCurrentUserSubscription() {\n    this.setCurrentUserSubscriptionActive(false);\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}