{"ast":null,"code":"// Service pour la gestion locale des offres d'emploi avec IndexedDB\nconst DB_NAME='BusinessConnectDB';const STORE_NAME='jobs';const DB_VERSION=1;function openDB(){return new Promise((resolve,reject)=>{const request=window.indexedDB.open(DB_NAME,DB_VERSION);request.onerror=()=>reject(request.error);request.onsuccess=()=>resolve(request.result);request.onupgradeneeded=()=>{const db=request.result;if(!db.objectStoreNames.contains(STORE_NAME)){db.createObjectStore(STORE_NAME,{keyPath:'id'});}};});}export const indexedDBService={async getJobs(){const db=await openDB();return new Promise((resolve,reject)=>{const tx=db.transaction(STORE_NAME,'readonly');const store=tx.objectStore(STORE_NAME);const request=store.getAll();request.onsuccess=()=>resolve(request.result);request.onerror=()=>reject(request.error);});},async saveJobs(jobs){const db=await openDB();return new Promise((resolve,reject)=>{const tx=db.transaction(STORE_NAME,'readwrite');const store=tx.objectStore(STORE_NAME);jobs.forEach(job=>store.put(job));tx.oncomplete=()=>resolve();tx.onerror=()=>reject(tx.error);});},async getJobById(id){const db=await openDB();return new Promise((resolve,reject)=>{const tx=db.transaction(STORE_NAME,'readonly');const store=tx.objectStore(STORE_NAME);const request=store.get(id);request.onsuccess=()=>resolve(request.result);request.onerror=()=>reject(request.error);});},async searchJobs(query){const jobs=await this.getJobs();return jobs.filter(job=>{var _job$title,_job$company;return((_job$title=job.title)===null||_job$title===void 0?void 0:_job$title.toLowerCase().includes(query.toLowerCase()))||((_job$company=job.company)===null||_job$company===void 0?void 0:_job$company.toLowerCase().includes(query.toLowerCase()));});},async filterJobs(filters){const jobs=await this.getJobs();// Filtrage simple, à adapter selon la structure des jobs et des filtres\nreturn jobs.filter(job=>{let match=true;if(filters.type&&job.type!==filters.type)match=false;if(filters.sector&&job.sector!==filters.sector)match=false;if(filters.location&&job.location!==filters.location)match=false;return match;});}};","map":{"version":3,"names":["DB_NAME","STORE_NAME","DB_VERSION","openDB","Promise","resolve","reject","request","window","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","db","objectStoreNames","contains","createObjectStore","keyPath","indexedDBService","getJobs","tx","transaction","store","objectStore","getAll","saveJobs","jobs","forEach","job","put","oncomplete","getJobById","id","get","searchJobs","query","filter","_job$title","_job$company","title","toLowerCase","includes","company","filterJobs","filters","match","type","sector","location"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/services/indexedDBService.ts"],"sourcesContent":["// Service pour la gestion locale des offres d'emploi avec IndexedDB\r\nconst DB_NAME = 'BusinessConnectDB';\r\nconst STORE_NAME = 'jobs';\r\nconst DB_VERSION = 1;\r\n\r\nfunction openDB() {\r\n  return new Promise<IDBDatabase>((resolve, reject) => {\r\n    const request = window.indexedDB.open(DB_NAME, DB_VERSION);\r\n    request.onerror = () => reject(request.error);\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onupgradeneeded = () => {\r\n      const db = request.result;\r\n      if (!db.objectStoreNames.contains(STORE_NAME)) {\r\n        db.createObjectStore(STORE_NAME, { keyPath: 'id' });\r\n      }\r\n    };\r\n  });\r\n}\r\n\r\nexport const indexedDBService = {\r\n  async getJobs() {\r\n    const db = await openDB();\r\n    return new Promise<any[]>((resolve, reject) => {\r\n      const tx = db.transaction(STORE_NAME, 'readonly');\r\n      const store = tx.objectStore(STORE_NAME);\r\n      const request = store.getAll();\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  },\r\n  async saveJobs(jobs: any[]) {\r\n    const db = await openDB();\r\n    return new Promise<void>((resolve, reject) => {\r\n      const tx = db.transaction(STORE_NAME, 'readwrite');\r\n      const store = tx.objectStore(STORE_NAME);\r\n      jobs.forEach(job => store.put(job));\r\n      tx.oncomplete = () => resolve();\r\n      tx.onerror = () => reject(tx.error);\r\n    });\r\n  },\r\n  async getJobById(id: string) {\r\n    const db = await openDB();\r\n    return new Promise<any>((resolve, reject) => {\r\n      const tx = db.transaction(STORE_NAME, 'readonly');\r\n      const store = tx.objectStore(STORE_NAME);\r\n      const request = store.get(id);\r\n      request.onsuccess = () => resolve(request.result);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  },\r\n  async searchJobs(query: string) {\r\n    const jobs = await this.getJobs();\r\n    return jobs.filter((job: any) =>\r\n      job.title?.toLowerCase().includes(query.toLowerCase()) ||\r\n      job.company?.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  },\r\n  async filterJobs(filters: any) {\r\n    const jobs = await this.getJobs();\r\n    // Filtrage simple, à adapter selon la structure des jobs et des filtres\r\n    return jobs.filter((job: any) => {\r\n      let match = true;\r\n      if (filters.type && job.type !== filters.type) match = false;\r\n      if (filters.sector && job.sector !== filters.sector) match = false;\r\n      if (filters.location && job.location !== filters.location) match = false;\r\n      return match;\r\n    });\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}