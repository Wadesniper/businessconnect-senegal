{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{checkAuth();},[]);const checkAuth=async()=>{try{const token=authService.getToken();if(token){const userData=await authService.getCurrentUser();setUser(userData);}}catch(error){console.error('Erreur lors de la vérification de l\\'authentification:',error);authService.removeToken();}finally{setLoading(false);}};const login=async(email,password)=>{try{setError(null);const response=await authService.login({phoneNumber:email,password});if(response&&response.token&&response.user){authService.setToken(response.token);setUser(response.user);}else{throw new Error('Erreur lors de la connexion');}}catch(error){setError('Erreur lors de la connexion');throw error;}};const logout=async()=>{try{setError(null);await authService.logout();authService.removeToken();setUser(null);}catch(error){setError('Erreur lors de la déconnexion');throw error;}};const register=async data=>{try{setError(null);const response=await authService.register(data);if(response.success&&response.data){authService.setToken(response.data.token);setUser(response.data.user);}else{throw new Error(response.message||'Erreur lors de l\\'inscription');}}catch(error){setError('Erreur lors de l\\'inscription');throw error;}};const updateProfile=async data=>{try{setError(null);const updatedUser=await authService.updateProfile(data);setUser(updatedUser);}catch(error){setError('Erreur lors de la mise à jour du profil');throw error;}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,error,login,logout,register,updateProfile},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","checkAuth","token","getToken","userData","getCurrentUser","console","removeToken","login","email","password","response","phoneNumber","setToken","Error","logout","register","data","success","message","updateProfile","updatedUser","Provider","value","useAuth","context"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\nimport { User, UserRegistrationData } from '../types/user';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  register: (data: UserRegistrationData) => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      const token = authService.getToken();\r\n      if (token) {\r\n        const userData = await authService.getCurrentUser();\r\n        setUser(userData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la vérification de l\\'authentification:', error);\r\n      authService.removeToken();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authService.login({ phoneNumber: email, password });\r\n      if (response && response.token && response.user) {\r\n        authService.setToken(response.token);\r\n        setUser(response.user);\r\n      } else {\r\n        throw new Error('Erreur lors de la connexion');\r\n      }\r\n    } catch (error) {\r\n      setError('Erreur lors de la connexion');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      setError(null);\r\n      await authService.logout();\r\n      authService.removeToken();\r\n      setUser(null);\r\n    } catch (error) {\r\n      setError('Erreur lors de la déconnexion');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (data: UserRegistrationData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authService.register(data);\r\n      if (response.success && response.data) {\r\n        authService.setToken(response.data.token);\r\n        setUser(response.data.user);\r\n      } else {\r\n        throw new Error(response.message || 'Erreur lors de l\\'inscription');\r\n      }\r\n    } catch (error) {\r\n      setError('Erreur lors de l\\'inscription');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      setError(null);\r\n      const updatedUser = await authService.updateProfile(data);\r\n      setUser(updatedUser);\r\n    } catch (error) {\r\n      setError('Erreur lors de la mise à jour du profil');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, error, login, logout, register, updateProfile }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}