{"ast":null,"code":"import React from'react';import{Container,Grid,Typography,Box}from'@mui/material';import JobAdviceBanner from'./components/JobAdviceBanner';import RedirectBanners from'./components/RedirectBanners';import JobFilters from'./components/JobFilters';import JobCard from'./components/JobCard';import{useAuth}from'../../hooks/useAuth';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const JobsPage=()=>{var _user$subscription;const{user}=useAuth();const isSubscribed=(user===null||user===void 0?void 0:(_user$subscription=user.subscription)===null||_user$subscription===void 0?void 0:_user$subscription.status)==='active';// const jobs = useJobs();\n// États des filtres\nconst[selectedSector,setSelectedSector]=React.useState(null);const[selectedType,setSelectedType]=React.useState(null);const[selectedLocation,setSelectedLocation]=React.useState(null);const[salaryRange,setSalaryRange]=React.useState([0,5000000]);const[experienceLevel,setExperienceLevel]=React.useState(null);const[workLocation,setWorkLocation]=React.useState(null);// TODO: Remettre la logique jobs et sectors ici\nconst jobs=[];const sectors=[];const isLoading=false;const filteredJobs=React.useMemo(()=>{return jobs.filter(job=>{if(selectedSector&&job.sector!==selectedSector)return false;if(selectedType&&job.type!==selectedType)return false;if(selectedLocation&&!job.location.toLowerCase().includes(selectedLocation.toLowerCase()))return false;if(job.salary){const jobMaxSalary=job.salary.max;if(jobMaxSalary<salaryRange[0]||jobMaxSalary>salaryRange[1])return false;}if(experienceLevel&&job.experienceLevel!==experienceLevel)return false;if(workLocation&&job.workLocation!==workLocation)return false;return true;});},[jobs,selectedSector,selectedType,selectedLocation,salaryRange,experienceLevel,workLocation]);return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{py:4},children:[/*#__PURE__*/_jsx(JobAdviceBanner,{}),/*#__PURE__*/_jsx(RedirectBanners,{}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,size:{xs:12,md:3},children:/*#__PURE__*/_jsx(JobFilters,{sectors:sectors,selectedSector:selectedSector,onSectorChange:setSelectedSector,selectedType:selectedType,onTypeChange:setSelectedType,selectedLocation:selectedLocation,onLocationChange:setSelectedLocation,salaryRange:salaryRange,onSalaryRangeChange:setSalaryRange,experienceLevel:experienceLevel,onExperienceLevelChange:setExperienceLevel,workLocation:workLocation,onWorkLocationChange:setWorkLocation})}),/*#__PURE__*/_jsx(Grid,{item:true,size:{xs:12,md:9},children:isLoading?/*#__PURE__*/_jsx(Typography,{children:\"Chargement des offres...\"}):filteredJobs.length===0?/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',py:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Aucune offre ne correspond \\xE0 vos crit\\xE8res de recherche.\"}),/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"Essayez de modifier vos filtres pour voir plus de r\\xE9sultats.\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[filteredJobs.length,\" offre\",filteredJobs.length>1?'s':'',\" trouv\\xE9e\",filteredJobs.length>1?'s':'']}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:filteredJobs.map(job=>/*#__PURE__*/_jsx(Grid,{item:true,size:{xs:12,md:6},children:/*#__PURE__*/_jsx(JobCard,{job:job,isSubscribed:isSubscribed})},job.id))})]})})]})]});};export default JobsPage;","map":{"version":3,"names":["React","Container","Grid","Typography","Box","JobAdviceBanner","RedirectBanners","JobFilters","JobCard","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","JobsPage","_user$subscription","user","isSubscribed","subscription","status","selectedSector","setSelectedSector","useState","selectedType","setSelectedType","selectedLocation","setSelectedLocation","salaryRange","setSalaryRange","experienceLevel","setExperienceLevel","workLocation","setWorkLocation","jobs","sectors","isLoading","filteredJobs","useMemo","filter","job","sector","type","location","toLowerCase","includes","salary","jobMaxSalary","max","maxWidth","sx","py","children","container","spacing","item","size","xs","md","onSectorChange","onTypeChange","onLocationChange","onSalaryRangeChange","onExperienceLevelChange","onWorkLocationChange","length","textAlign","variant","gutterBottom","color","map","id"],"sources":["C:/Users/babac/OneDrive/Bureau/businessconnect-senegal-main/businessconnect-senegal/client/src/pages/jobs/JobsPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Container, Grid, Typography, Box } from '@mui/material';\r\nimport JobAdviceBanner from './components/JobAdviceBanner';\r\nimport RedirectBanners from './components/RedirectBanners';\r\nimport JobFilters from './components/JobFilters';\r\nimport JobCard from './components/JobCard';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { JobType } from '../../types/job';\r\n\r\nconst JobsPage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const isSubscribed = user?.subscription?.status === 'active';\r\n  // const jobs = useJobs();\r\n\r\n  // États des filtres\r\n  const [selectedSector, setSelectedSector] = React.useState<string | null>(null);\r\n  const [selectedType, setSelectedType] = React.useState<JobType | null>(null);\r\n  const [selectedLocation, setSelectedLocation] = React.useState<string | null>(null);\r\n  const [salaryRange, setSalaryRange] = React.useState<[number, number]>([0, 5000000]);\r\n  const [experienceLevel, setExperienceLevel] = React.useState<string | null>(null);\r\n  const [workLocation, setWorkLocation] = React.useState<string | null>(null);\r\n\r\n  // TODO: Remettre la logique jobs et sectors ici\r\n  const jobs: any[] = [];\r\n  const sectors: string[] = [];\r\n  const isLoading = false;\r\n\r\n  const filteredJobs = React.useMemo(() => {\r\n    return jobs.filter(job => {\r\n      if (selectedSector && job.sector !== selectedSector) return false;\r\n      if (selectedType && job.type !== selectedType) return false;\r\n      if (selectedLocation && !job.location.toLowerCase().includes(selectedLocation.toLowerCase())) return false;\r\n      if (job.salary) {\r\n        const jobMaxSalary = job.salary.max;\r\n        if (jobMaxSalary < salaryRange[0] || jobMaxSalary > salaryRange[1]) return false;\r\n      }\r\n      if (experienceLevel && job.experienceLevel !== experienceLevel) return false;\r\n      if (workLocation && job.workLocation !== workLocation) return false;\r\n      return true;\r\n    });\r\n  }, [jobs, selectedSector, selectedType, selectedLocation, salaryRange, experienceLevel, workLocation]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <JobAdviceBanner />\r\n      <RedirectBanners />\r\n      <Grid container spacing={4}>\r\n        <Grid item size={{ xs: 12, md: 3 }}>\r\n          <JobFilters\r\n            sectors={sectors}\r\n            selectedSector={selectedSector}\r\n            onSectorChange={setSelectedSector}\r\n            selectedType={selectedType}\r\n            onTypeChange={setSelectedType}\r\n            selectedLocation={selectedLocation}\r\n            onLocationChange={setSelectedLocation}\r\n            salaryRange={salaryRange}\r\n            onSalaryRangeChange={setSalaryRange}\r\n            experienceLevel={experienceLevel}\r\n            onExperienceLevelChange={setExperienceLevel}\r\n            workLocation={workLocation}\r\n            onWorkLocationChange={setWorkLocation}\r\n          />\r\n        </Grid>\r\n        <Grid item size={{ xs: 12, md: 9 }}>\r\n          {isLoading ? (\r\n            <Typography>Chargement des offres...</Typography>\r\n          ) : filteredJobs.length === 0 ? (\r\n            <Box sx={{ textAlign: 'center', py: 4 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Aucune offre ne correspond à vos critères de recherche.\r\n              </Typography>\r\n              <Typography color=\"text.secondary\">\r\n                Essayez de modifier vos filtres pour voir plus de résultats.\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {filteredJobs.length} offre{filteredJobs.length > 1 ? 's' : ''} trouvée{filteredJobs.length > 1 ? 's' : ''}\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                {filteredJobs.map((job) => (\r\n                  <Grid item size={{ xs: 12, md: 6 }} key={job.id}>\r\n                    <JobCard job={job} isSubscribed={isSubscribed} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JobsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}